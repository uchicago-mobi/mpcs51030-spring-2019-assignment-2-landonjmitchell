
### Requirements

Model and Data
2/2 Custom class "Animal" that conforms to CustomStringConvertible
0.5/0.5 Prints animal info to console via description property
0.5/0.5 "Animals" array is shuffled when app is launched

User Interface
1/1 UIScrollView's contentSize is 3x wider than the screen with paging enabled
2/2 3 UIButtons display animal names
2/2 3 UIImageViews display animal images
1/1 Uses for loop with varying x coordinate to populate UIButtons and UIImageViews

Animal Name Button
1/1 Uses button tag to identify correct animal object
1/1 UIAlertController displays animal's name and age
2/2 Animal sound plays

Animal Species Label
1/1 Label does not scroll with the rest of the screen
2/2 Label changes animal name using UIScrollViewDelegate
1/1 Label fades in and out using the alpha property

Code Quality
2/2 Best Practice
1/1 Well-Formatted
2/2 Clearly Written
1/1 Concise

Miscellaneous
1/1 Compiles with no warnings or errors
0.5/0.5 Custom icon
0.5/0.5 List of sources

### Comments

Nice work! Everything functions as it should. Your code is also very well formatted, and
your variables/methods/etc are all named descriptively. Keep it up.

You're the first person who's split the button and image view configuration into helper
methods. Encapsulation is good! Consider doing the same for the population of your animals 
array.

Your buttonTapped methd is performing two "helper-method-worthy" tasks, playAnimalSound()
and presentAnimalAlert(). Consider splitting those into their own tasks as well.

For the section marking, it should look like "// MARK: Actions", the key part being
"// MARK:". Xcode looks for that exact capitalization and formatting, and will actually
make those sections for you in the hierarchy bar near the top of your screen. It gives you
a way to quickly nav between those marked sections.

### Score

25/25
